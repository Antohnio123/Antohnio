git add .                              -  добавить в список назначенных к выгрузке ВСЕ файлы и папки
git rm --cached blog/blog.php            - исключить из назначенных к выгрузке конкретный файл
git commit -m "README file was changed"     - выгрузить в ЛОКАЛЬНЫЙ репозиторий файлы и  дать комментарий
git push  -u origin master                  - из локального выгрузить ветку главную в репозиторий, подключенный как origin
git push                                      - краткая команда выгрузить из локалки в репозиторий
git log --oneline                                      - посмотреть лог по 1 строчке
git reset <кусок изменённого объекта, например HEAD hello.html>  -  убрать из индексации часть изменений (после случайного git add .)
git checkout <hello.html>				- отбэкапиться на версию до коммита с hello.html



git status                                       - посмотреть, что назначено к выгрузке в Локалку
git remote add origin https://github.com/Antohnio123/Antohnio.git        - подключиться к моему репозиторию
git remote set-url origin new.git.url/here
git clone https://github.com/aanikin/Python                         - скачать папку с чужого репозитория
git remote -v                                          - узнать, к каким репозиториям подключен

git remote add   	aanikin  https://github.com/aanikin/Python  -  подключение к репозиторию АА Аникина, где перед адресом стоит ИМЯ!
PS D:\Python\aanikin\Python> git add Practice/a.makarov/test.py     - добавление папки, либо можно добавить всё
git pull aanikin  master --allow-unrelated-histories     - скачать данные с репозитория АА Аникина

PS D:\Python\aanikin\Python> git push -u aanikin --all    - ПОСЛЕ pull  закинуть измененные свои файлы



ВЕТКИ: --------------------------------------------------
git status 						- показать, на какой ветке мы сейчас и в каком состоянии
git branch -a                                        - увидеть все ветки
git checkout -b admin                                 -  создать ветку admin и сразу на неё переключиться
git checkout forum                                     - переключиться на ветку форума

git checkout 2a36c1b                                     - переключиться на версию с указанным ID
git revert 7f6b500                                    -  отменить коммит с указанным ID
git reset 9cf99cc --hard                                - нормально отбэкапиться к ID версии
git merge forum                                       - слить текущую ветку и указанную (forum)
git branch -d <имя ветки>				- удалить ветку за ненадобностью или после merge с другой.

git branch --set-upstream-to=master tocheck		- ветка tocheck теперь тречит ветку master (нужно для оттречивания веток на сторонних ресурсах)
git push origin <имя ветки>				- запушить на репо origin ветку <имя ветки>


Merge							- Слияние веток
$ git checkout <feature>
$ git merge master
(or)
$ git merge master <feature>

Rebase 							- Перебазирвоание одной ветки в другую (мастера в <feature>). 
ОСТОРОЖНО!   Перезаписывает историю, срывает связи с удаленными ветками (требуется новый пуш)
$ git checkout <feature>
$ git rebase -i master				- Это откроет редактор, перечислив все коммиты, которые будут перемещены.
Это точно определяет, как будет выглядеть ветка после выполнения перемещения.
Упорядочивая объекты, вы можете сделать историю такой, как захотите. Вы можете использовать команды fixup, squash, edit, и так далее
$ git checkout <feature>
$ git rebase master

