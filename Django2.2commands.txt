python -m venv venv 			- создать папку под именем venv с виртуальной средой Python 
venv/Scripts/activate				- активировать виртуальную среду в папке venv. Возможно, вместо папки Source будет папка bin.

django-admin startproject <имя проекта> .           - создать проект под именем <имя проекта> (с точкой в коцне, чтоб в текущей папке)

/path/to/virtualenv/Scripts/activate 		- активировать энвайромент.
python manage.py runserver			- запустить сервер



django-admin startapp <Имя приложения>			- создать приложение по имени <Имя приложения> в проекте.
После этого надо прописать его в settings.py в INSTALLED APPS: просто добавить название папки в кавычках (через точку после названия проекта, если manage.py лежит в одной папке с проектом):
    'django.contrib.staticfiles',
    '<имя проекта>.<Имя приложения>',

python manage.py shell 				- вызов shell - коммандной строки, в которой можно работать с моделями, создавать их экземпляры и много чего ещё.
<переменная с экземпляром>.<название привязанной через ForeignKey модели>_set.all()     -  вывести все экземпляры привязанной модели к выбранному в переменной экземпляру.
Например, вывести все комментарии к выбранной статье.


МИГРАЦИИ:
python manage.py migrate			- применить миграции и создать схему (таблицы, поля, столбики) в базе данных...
python manage.py makemigrations    		- создать файл миграции
python manage.py sqlmigrate <папка приложения - опционально> <номер миграции>   - посмотреть сгенерированный миграцией sql код.
